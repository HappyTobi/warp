name: Release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  lint:
    name: Lint files
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  test:
    name: Run tests
    runs-on: 'ubuntu-latest'
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go test -v -cover
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'
    needs: test
    env:
      GITCHGLOG_VERSION: "0.15.4"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build
        run: |
          export VERSION="${GITHUB_REF##*/}"
          make release

      - name: Install git-chglog
        shell: bash
        run: |
          mkdir -p tmpdir
          ( cd tmpdir ;
          wget https://github.com/git-chglog/git-chglog/releases/download/v${GITCHGLOG_VERSION}/git-chglog_${GITCHGLOG_VERSION}_linux_amd64.tar.gz
          tar -tf git-chglog_*
          tar -xvf git-chglog_* git-chglog
          )
          mkdir -p ~/.local/bin/
          mv tmpdir/git-chglog ~/.local/bin/git-chglog
          rm -rf tmpdir

      - name: Release Notes
        run: |
          ~/.local/bin/git-chglog --template ./.chglog/CHANGELOG.tpl.md -o .github/RELEASE-TEMPLATE.md
          cat .github/RELEASE-TEMPLATE.md

      - name: Release with Notes
        uses: softprops/action-gh-release@v2
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          files: |
            build/artifacts/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}